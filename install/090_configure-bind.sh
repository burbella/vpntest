#!/bin/bash

# IPv4 and IPv6
# install appropriate config files
# restart with new configs

ZZZ_SCRIPTNAME=`basename "$0"`
echo "$ZZZ_SCRIPTNAME - START"

#-----import the shell utils-----
source /opt/zzz/util/util.sh
# vars set in util.sh: REPOS_DIR, ZZZ_CONFIG_DIR

NAMED_DIR=$ZZZ_CONFIG_DIR/named

zzzConfig_Domain=`/opt/zzz/python/bin/config-parse.py --var 'AppInfo/Domain'`
echo "Domain: $zzzConfig_Domain"
extract_domain_from_subdomain $zzzConfig_Domain

# backup existing default files
#   named.conf - disabling 2 of the referenced files
#   named.conf.local
#   named.conf.options
#   /etc/dhcp/dhclient.conf - amazon's suggested DNS settings file
#   /etc/resolv.conf - soft link, so move instead of copy (only if we disable systemd-resolved)
cp -p /etc/bind/named.conf /etc/bind/named.conf.old
cp -p /etc/bind/named.conf.local /etc/bind/named.conf.local.old
cp -p /etc/bind/named.conf.options /etc/bind/named.conf.options.old
cp -p /etc/dhcp/dhclient.conf /etc/dhcp/dhclient.conf.old
#mv /etc/resolv.conf /etc/resolv.conf.old

#-----install configs-----
cp $NAMED_DIR/null.zone.file /etc/bind
# zzz.zzz.zone.file is now generated by build-config.py below
#cp $NAMED_DIR/zzz.zzz.zone.file /etc/bind

#-----configs for the settings page-----
cp $NAMED_DIR/named-settings.conf /etc/bind
# named-zzz.conf is now generated by build-config.py below
#cp $NAMED_DIR/named-zzz.conf /etc/bind
cp $NAMED_DIR/settings/* /etc/bind/settings
touch /etc/bind/settings/countries.conf
chown root.bind /etc/bind/settings/countries.conf
chmod 644 /etc/bind/settings/countries.conf
touch /etc/bind/settings/tlds.conf
chown root.bind /etc/bind/settings/tlds.conf
chmod 644 /etc/bind/settings/tlds.conf

#TODO: ListManager handles this now - keep the files until all code that may reference the files is patched
#-----make settings configs from text files-----
# (assumes the full Zzz app has not yet installed, assumes the updater script can run standalone)
PYTHON_DIR=/opt/zzz/python
BIND_SETTINGS_UPDATER_FILENAME=update-bind-settings-configs.py
BIND_SETTINGS_UPDATER_SRC=$REPOS_DIR/zzzapp/bin/$BIND_SETTINGS_UPDATER_FILENAME
BIND_SETTINGS_UPDATER_INSTALLED=$PYTHON_DIR/bin/$BIND_SETTINGS_UPDATER_FILENAME
cp $BIND_SETTINGS_UPDATER_SRC $PYTHON_DIR/bin
chmod 755 $BIND_SETTINGS_UPDATER_INSTALLED
dos2unix -q $BIND_SETTINGS_UPDATER_INSTALLED
$BIND_SETTINGS_UPDATER_INSTALLED

#-----build the BIND configs-----
/opt/zzz/python/bin/build-config.py --bind

#-----add soft links to fix file-not-found errors-----
ln -s /etc/bind/null.zone.file /var/cache/bind/null.zone.file
ln -s /etc/bind/zzz.zzz.zone.file /var/cache/bind/zzz.zzz.zone.file
if [[ "$ZZZ_DOMAIN_EXTRACTED" != "zzz.zzz" ]]; then
    ln -s /etc/bind/$ZZZ_DOMAIN_EXTRACTED.zone.file /var/cache/bind/$ZZZ_DOMAIN_EXTRACTED.zone.file
fi

#-----prep custom DNS file for first use-----
touch /etc/bind/dns-blacklist
chown root.bind /etc/bind/dns-blacklist
chmod 644 /etc/bind/dns-blacklist

#-----make a logging directory-----
chown bind.bind /var/log/named/
chmod 775 /var/log/named/

# copy files from Ubuntu folder
#   Rename the CentOS named.conf to named.conf.options
#   Major sections in named.conf:
#       acl's
#       options(uses acl's)
#       logging
#       named.root.key (in Ubuntu this is included in named.conf.default-zones)
#       views(uses acl's)
#   /etc/bind/named.conf.options
#       This is for the "options" section only?
#       Put all configs here?
#   /etc/bind/named.conf.local
#       custom blacklists
cp $NAMED_DIR/named.conf /etc/bind
# named.conf.options is now generated by build-config.py above
#cp $NAMED_DIR/named.conf.options /etc/bind
cp $NAMED_DIR/named.conf.local /etc/bind

#-----test the config file-----
named-checkconf -zj > /var/log/zzz/install/bind.log

#TODO: install logrotate config

#TEST - find out if this works at all - need 127.0.0.1 in /etc/resolv.conf
#-----change the default DNS server to BIND instead of systemd-resolved, but keep the old DNS as backup-----
# may require a reboot to work
# Reference:
#   https://aws.amazon.com/premiumsupport/knowledge-center/dns-resolution-failures-ec2-linux/
echo -e "supersede domain-name-servers 127.0.0.1, 127.0.0.53;" >> /etc/dhcp/dhclient.conf
/sbin/dhclient

#-----restart bind to load the new config-----
systemctl restart bind9

#TEST - use this if the amazon approach fails
#-----disable systemd-resolved so BIND can do DNS instead-----
# Reference:
#   https://www.ctrl.blog/entry/resolvconf-tutorial
#systemctl disable --now systemd-resolved
#cp $REPOS_DIR/Ubuntu/named/etc_resolv.conf /etc/resolv.conf

echo "$ZZZ_SCRIPTNAME - END"
